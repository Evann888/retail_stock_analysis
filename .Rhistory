getwd()
getwd()
install.packages("flexdashboard")
install.packages("shiny")
# Layers control
m %>% addLayersControl(
baseGroups = c("Default", "Dark"),
# overlayGroups = new.kemiskinan.jateng$jlhrange,
options = layersControlOptions(collapsed = FALSE)
)
# Layers control
m %>% addLayersControl(
baseGroups = c("Default", "Dark"),
# overlayGroups = new.kemiskinan.jateng$jlhrange,
options = layersControlOptions(collapsed = FALSE)
)
# Layers control
m %>% addLayersControl(
baseGroups = c("Default", "Dark"),
# overlayGroups = new.kemiskinan.jateng$jlhrange,
options = layersControlOptions(collapsed = FALSE)
)
m <- leaflet.map %>%
addProviderTiles(providers$CartoDB.DarkMatter, group = "Dark") %>%
setView(lng = 110.1404380, lat = -7.4832133, zoom = 8) %>%
addCircleMarkers(lng = new.kemiskinan.jateng$longitude, lat = new.kemiskinan.jateng$latitude,
color=~pal(jlhrange), weight = 1, radius = 20,
opacity = 1, label = new.kemiskinan.jateng$label,
clusterOptions = markerClusterOptions(showCoverageOnHover = TRUE)) %>%  # add legend to the map
addLegend(position = "bottomright", # position where the legend should appear
pal = pal, # pallete object where the color is defined
values = ~jlhrange, # column variable or values that were used to derive the color pallete object
title = "Rata-rata Jumlah Warga Miskin di Jawa Tengah Tahun 2012-2016", # title of the legend
opacity = 0.8 # Opacity of legend
)
install.packages(Rweka)
install.packages('Rweka)
da
da
wdw
a
d
aw
''
;
+
;
+;
adaw
dw
exit
exit()
install.packages(Rweka)
install.packages(Rweka)
library(ggplot2)
df.retail <- read.csv("Online Retail.csv")
setwd("E:/ITS/Information System/SEMESTER 6/AB/FP")
library(dplyr)
library(reshape2)
library(ggplot2)
library(caret)
library(e1071)
library(bpa)
library(rminer)
library(ROCR)
df.retail <- read.csv("Online Retail.csv")
names(df.retail)[3] <- "Product"
boxplot.stats(df.retail$Country)
barplot(table(df.retail$Country), main = "x")
hist(df.retail$UnitPrice, df.retail$Country)
#1E Eksplorasi
# bar plot education.num
ggplot(df.retail, aes(x = total_quantity, y = count, fill = income)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
#1E Eksplorasi
# bar plot education.num
ggplot(df.retail, aes(x = Product, y = count, fill = income)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
#1E Eksplorasi
count <- c(count, table(df.predict[df.predict$Total_quantity == 'low',]$class.label)["Low"])
#Memilih Variabel yang mau dipakai untuk preprocessing
df.retail.select <- df.retail %>%
select(Product, Country, Quantity, UnitPrice, InvoiceDate, CustomerID)
df.retail.select[c("Month", "Date", "Year")]  <- colsplit(
df.retail.select$InvoiceDate,"\\/",c("Month", "Date", "Year"))
df.retail.select[c("Year", "Hour")]  <- colsplit(df.retail.select$Year," ",c("Year", "Hour"))
#Remove NA (Quantity banyak yg 0, description ?)
summary(df.retail.select)
df.retail.select[c("Hour", "Minute")]  <- colsplit(df.retail.select$Hour,":",c("Hour", "Minute"))
#Produk
trimws(df.retail.select$Product)
df.retail.select$Product <- gsub("[^A-Za-z.,0-9 ]", "", df.retail.select$Product)
df.retail.select$Product <- gsub("^\\d+$", "", df.retail.select$Product)
df.retail.select <-df.retail.select[!(is.na(df.retail.select$Product) |
df.retail.select$Product==""), ]
df.retail.select <- df.retail.select[!grepl("-", df.retail.select$Quantity),]
df.retail.select$Quantity <- gsub("[^0-9]", "", df.retail.select$Quantity)
df.retail.select$Quantity <- as.numeric(df.retail.select$Quantity)
df.retail.select <-df.retail.select[!(is.na(df.retail.select$Quantity) |
df.retail.select$Quantity==""), ]
#UnitPRice
df.retail.select <- df.retail.select[!grepl("-", df.retail.select$UnitPrice),]
df.retail.select <- df.retail.select[!grepl("0", df.retail.select$UnitPrice),]
# write.csv(df.retail.select, "clean_before_transform.csv")
######################
####Transformation####
######################
df.retail.clean <- df.retail.select %>% filter(df.retail.select$Country == "United Kingdom") %>%
group_by(Product, Country, Month, Hour) %>%
summarise(Total_price_product =sum(UnitPrice*Quantity), Total_quantity = sum(Quantity))
df.retail.clean <-  df.retail.clean %>%
mutate(
Season = case_when(
Month %in% 9:11 ~ "Autumn",
Month %in%  12  ~ "Winter",
Month %in%  1:2  ~ "Winter",
Month %in%  3:5  ~ "Spring",
TRUE ~ "Summer")
)
df.retail.clean$Hour = cut(df.retail.clean$Hour,
breaks = c(0, 12, 24), right=FALSE,
labels = c("AM", "PM"))
df.retail.transform <- df.retail.clean %>%
group_by(Product, Country, Season, Hour) %>%
summarise(Total_price_product =sum(Total_price_product), Total_quantity = sum(Total_quantity))
df.retail.transform$Total_quantity <- cut(df.retail.transform$Total_quantity,
breaks = c(1, 500, 1500, 10000), right=FALSE,
labels = c("Low", "Medium", "High"))
df.predict <- df.retail.transform %>% ungroup(Country)  %>%
select(Product, Season, Hour, Total_quantity)
#1E Eksplorasi
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Low',]$class.label)["Low"])
#1E Eksplorasi
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"])
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
count <- c(count, table(df.predict[df.predict$Total_quantity == 'High',]$Total_quantity)["High"])
Total_quantity)
ggplot(df.predict, aes(x = Total_quantity, y = count, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
df.predict$Total_quantity
count
df.retail.transform$Total_quantity <- cut(df.retail.transform$Total_quantity,
breaks = c(0, 500, 1500, 10000), right=FALSE,
labels = c("Low", "Medium", "High"))
df.predict <- df.retail.transform %>% ungroup(Country)  %>%
select(Product, Season, Hour, Total_quantity)
#1E Eksplorasi
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"])
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
count <- c(count, table(df.predict[df.predict$Total_quantity == 'High',]$Total_quantity)["High"])
count
source('E:/ITS/Information System/SEMESTER 6/AB/FP/retail.r', echo=TRUE)
is.na(df.predict$Total_quantity)
sum(is.na(df.predict$Total_quantity))
bpa(df.predict$Total_quantity)
bpa(df.predict$Total_quantity, unique_only =TRUE)
#1E Eksplorasi
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"])
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
count <- c(count, table(df.predict[df.predict$Total_quantity == 'High',]$Total_quantity)["High"])
count
bpa(df.predict$Total_quantity, unique_only =TRUE)
count
ggplot(df.predict, aes(x = Total_quantity, y = count, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
count
bpa(df.predict$Total_quantity, unique_only =TRUE)
#1E Eksplorasi
count <- c(count, table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"])
bpa(df.predict$Total_quantity, unique_only =TRUE)
#1E Eksplorasi
z <- c(count, table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"])
z <- c(count, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
z <- c(count, table(df.predict[df.predict$Total_quantity == 'High',]$Total_quantity)["High"])
ggplot(df.predict, aes(x = Total_quantity, y = z, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
z
View(z)
#1E Eksplorasi
x <- c(x, table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"])
x <- c(x, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
#1E Eksplorasi
x <- table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"]
x <- c(x, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
x <- c(x, table(df.predict[df.predict$Total_quantity == 'High',]$Total_quantity)["High"])
x
ggplot(df.predict, aes(x = Total_quantity, y = z, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
ggplot(df.predict, aes(x = Total_quantity, y = x, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
ggplot(df.predict, aes(x = Total_quantity, y = x, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
#1E Eksplorasi
hh <- table(df.predict[df.predict$Total_quantity == 'Low',]$Total_quantity)["Low"]
hh<- c(hh, table(df.predict[df.predict$Total_quantity == 'Medium',]$Total_quantity)["Medium"])
hh <- c(hh, table(df.predict[df.predict$Total_quantity == 'High',]$Total_quantity)["High"])
ggplot(df.predict, aes(x = Total_quantity, y = hh, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
hh <- as.numeric(hh)
ggplot(df.predict, aes(x = Total_quantity, y = hh, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
hh
ggplot(df.predict, aes(x = Total_quantity, y = hh, fill = Total_quantity)) +
geom_bar(stat = "identity") +
ggtitle('Income Level with Years of Education')
?rep
#histogram
hist(df.retail$UnitPrice, freq = TRUE,
main="Histogram Distribusi Harga Produk", xlab = "Harga Produk")
options(spicen=9999)
#histogram
hist(df.retail$UnitPrice, freq = TRUE,
main="Histogram Distribusi Harga Produk", xlab = "Harga Produk")
#histogram
hist(df.retail$UnitPrice, freq = TRUE,
main="Histogram Distribusi Harga Produk", xlab = "Harga Produk")
options(scipen=999)
#histogram
hist(df.retail$UnitPrice, freq = TRUE,
main="Histogram Distribusi Harga Produk", xlab = "Harga Produk")
